# -*- coding:utf-8 -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1466845321.1090662
_enable_loop = True
_template_filename = '/home/aida/Desktop/tg/practice/practice/templates/index.mak'
_template_uri = '/home/aida/Desktop/tg/practice/practice/templates/index.mak'
_source_encoding = 'utf-8'
from markupsafe import escape_silent as escape
_exports = ['title']


def _mako_get_namespace(context, name):
    try:
        return context.namespaces[(__name__, name)]
    except KeyError:
        _mako_generate_namespaces(context)
        return context.namespaces[(__name__, name)]
def _mako_generate_namespaces(context):
    pass
def _mako_inherit(template, context):
    _mako_generate_namespaces(context)
    return runtime._inherit_from(context, 'local:templates.master', _template_uri)
def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        h = context.get('h', UNDEFINED)
        items = context.get('items', UNDEFINED)
        __M_writer = context.writer()
        __M_writer('\n\n')
        __M_writer('\n  <div class="row">\n    <div class="col-md-12">\n      <div class="jumbotron">\n        <h1>BluePrint</h1>\n\n')
        for item in items:
            __M_writer('            <article class="box well col-md-4">\n              <header>\n \t\t\t\t<a href="')
            __M_writer(escape(item.author_url))
            __M_writer('" title="')
            __M_writer(escape(item.author_username))
            __M_writer('" class="help-block col-md-4">\n \t\t\t\t\t<img src="')
            __M_writer(escape(item.author_avatar_url))
            __M_writer('" class="avatar img-circle">\n \t\t\t\t</a>\n \t\t\t\t<div class="col-md-8">\n \t\t\t\t\t<h4>')
            __M_writer(escape(item.author_name))
            __M_writer('</h4>\n \t\t\t\t\t<h5>')
            __M_writer(escape(item.author_email))
            __M_writer('</h5>\n \t\t\t\t\t<h6>')
            __M_writer(escape(item.date))
            __M_writer('</h6>\n \t\t\t\t</div>\n \t\t\t  </header>\n \t\t\t  <a href="')
            __M_writer(escape(item.commit_url))
            __M_writer('" title="{item.sha}" class="smallest text-danger"><b>Sha: </b> ')
            __M_writer(escape(item.sha))
            __M_writer('</a>\n \t\t\t  <p class="message smaller"><b>Message: </b>')
            __M_writer(escape(item.message))
            __M_writer('</p>\n            </article>\n')
        __M_writer('\n          <a class="btn btn-primary btn-lg" href="http://www.turbogears.org" target="_blank">\n            ')
        __M_writer(escape(h.icon('book')))
        __M_writer(' Learn more\n          </a>\n      </div>\n    </div>\n\n  </div>\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_title(context):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_writer = context.writer()
        __M_writer('\n  Commit\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"filename": "/home/aida/Desktop/tg/practice/practice/templates/index.mak", "line_map": {"65": 3, "69": 3, "75": 69, "28": 0, "35": 1, "36": 5, "37": 11, "38": 12, "39": 14, "40": 14, "41": 14, "42": 14, "43": 15, "44": 15, "45": 18, "46": 18, "47": 19, "48": 19, "49": 20, "50": 20, "51": 23, "52": 23, "53": 23, "54": 23, "55": 24, "56": 24, "57": 27, "58": 29, "59": 29}, "source_encoding": "utf-8", "uri": "/home/aida/Desktop/tg/practice/practice/templates/index.mak"}
__M_END_METADATA
"""
